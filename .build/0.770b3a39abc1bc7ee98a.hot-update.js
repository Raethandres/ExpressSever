exports.id=0,exports.modules={"./src/server.js":function(e,s,o){"use strict";o.r(s);var t=o("express"),n=o.n(t),a=o("http"),r=o.n(a),d=o("jsonwebtoken"),u=o.n(d),i=o("mongoose"),c=o.n(i);const l=c.a.Schema({email:{type:String,required:!0,unique:!0,match:/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/},password:{type:String,required:!0}});var p=c.a.model("User",l);const h=Object(t.Router)();h.get("/",(e,s)=>{s.json({message:"I am a server route and can also be hot reloaded!"})}),h.post("/user",function(e,s,o){let t=e.headers.authorization;void 0!==t?(e.token=t,o()):s.status(403)},function(e,s,o){u.a.verify(e.token,"secret",(e,t)=>{e&&s.sendStatus(403),o()})},(e,s)=>{console.log(e.body),new p({email:e.body.email,password:e.body.password}).save().then(()=>{s.json({status:200,token:e.token})})}),h.post("/login",(e,s)=>{p.find({email:e.body.email}).exec().then(o=>{o<1&&s.status(403).json({message:"user not found"}),console.log(o),o[0].password===e.body.password&&u.a.sign({user:o},"secret",(e,t)=>{t?s.json({token:t}):s.json({user:o})}),s.status(403).json({message:"auth fail"})})});var m=h,g=o("body-parser"),b=o.n(g);c.a.connect("mongodb://localhost/prueba",{useNewUrlParser:!0});const w=n()();w.use(function(e,s,o){s.header("Access-Control-Allow-Origin","*"),s.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept,Authorization"),s.header("Access-Control-Allow-Methods","GET,PUT,POST,DELETE"),o()}),w.use(b.a.json()),w.use(b.a.urlencoded({extended:!0})),w.use("/",m),r.a.createServer(w).listen(3e3)}};