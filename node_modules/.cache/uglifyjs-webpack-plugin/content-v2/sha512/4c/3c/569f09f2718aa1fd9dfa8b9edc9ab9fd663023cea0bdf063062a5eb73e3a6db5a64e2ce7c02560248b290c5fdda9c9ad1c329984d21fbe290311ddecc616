{"code":"exports.id=0,exports.modules={\"./src/server.js\":function(e,o,s){\"use strict\";s.r(o);var t=s(\"express\"),n=s.n(t),a=s(\"jsonwebtoken\"),r=s.n(a),d=s(\"mongoose\"),c=s.n(d);const u=c.a.Schema({email:{type:String,required:!0,unique:!0,match:/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/},password:{type:String,required:!0}});var i=c.a.model(\"User\",u);const l=Object(t.Router)();l.get(\"/\",(e,o)=>{o.json({message:\"I am a server route and can also be hot reloaded!\"})}),l.post(\"/user\",function(e,o,s){let t=e.headers.authorization;void 0!==t?(e.token=t,s()):o.status(403)},function(e,o,s){r.a.verify(e.token,\"secret\",(e,t)=>{e&&o.sendStatus(403),s()})},(e,o)=>{console.log(e.body),new i({email:e.body.email,password:e.body.password}).save().then(()=>{o.json({status:200,token:e.token})}).catch(e=>{o.json({status:500})})}),l.post(\"/login\",(e,o)=>{i.find({email:e.body.email}).exec().then(e=>{e<1&&o.status(403).json({message:\"user not found\"}),console.log(e),r.a.sign({user:e},\"secret\",(s,t)=>{t?o.json({token:t}):o.json({user:e})})})});var h=l,m=s(\"body-parser\"),p=s.n(m);c.a.connect(\"mongodb://localhost/prueba\");const g=n()();g.use(function(e,o,s){o.header(\"Access-Control-Allow-Origin\",\"*\"),o.header(\"Access-Control-Allow-Headers\",\"Origin, X-Requested-With, Content-Type, Accept,Authorization\"),o.header(\"Access-Control-Allow-Methods\",\"GET,PUT,POST,DELETE\"),s()}),g.use(p.a.json()),g.use(p.a.urlencoded({extended:!0})),g.use(\"/\",h);o.default=g}};","extractedComments":[]}